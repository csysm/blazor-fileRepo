git init
git add <file>
git commit -m "<message>"
git push -u origin main
git status
git log
git reflog
git branch -v
git branch <branch-name>
git checkout <branch-name>
git merge <branch-name>
git pull <>


-------------------------------------------------------------------------------------------
git clone 克隆远程库中项目
git checkout -b <new branch name> 创建并切换到新分支
修改文件
git diff 查看改变的内容
git add <filename> 添加到暂存区
git commit -m "message" 提交到本地库
git push origin <new branch name> 推送到远程库的新分支
--------------------------------------若远程库的main已经改变----------------------------
git checkout main 切换到本地库的main
git pull origin main 拉取远程库的main
git checkout <new branch name> 切换到本地库的新分支
git rebase main 合并新分支和更新后的main
若冲突则手动解决
git add <filename> 解决后重新提交到暂存区
git rebase --continue 解决冲突完成 
git commit -m "message" 提交到本地库
git push -f origin <new branch name> 强制推送到远程库的新分支
--------------------------------------------------------------------------------------------
在github上发起pull request并审核，通过squash and merge合并分支
删除github上的新分支
本地库切换到main
git pull origin main 拉取远程库的最新代码到本地
git branch -D <new branch name> 删除本地库的新分支
